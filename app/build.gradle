buildscript {
    repositories {
        jcenter()
        maven {
            name 'Sonatype SNAPSHOTS'
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath 'com.stanfy.spoon:spoon-gradle-plugin:0.14.2-SNAPSHOT'
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'spoon'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0 // Bump for dogfood builds, public alphas, betas, etc.

def getFeedbackEmailAddress() {
    return hasProperty('FEEDBACK_EMAIL_ADDRESS') ? FEEDBACK_EMAIL_ADDRESS : ''
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))


android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.ushahidi.android"
        minSdkVersion 14
        targetSdkVersion 21

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""

        buildConfigField "String", "FEEDBACK_EMAIL_ADDRESS", "\"${getFeedbackEmailAddress()}\""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError = false
        lintConfig file("src/main/lint.xml")
    }

    dexOptions {
        preDexLibraries = Boolean.valueOf(System.getProperty("pre-dex", "true"))
    }

    packagingOptions {
        exclude 'LICENSE'
        exclude 'NOTICE'
        exclude 'asm-license.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

spoon {
    // Enable debug output
    debug = true
}

dependencies {
    def core = project(':core')
    def data = project(':data')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'javax.inject:javax.inject:1@jar'
    compile 'com.squareup.dagger:dagger-compiler:1.2.+'
    compile 'com.squareup.dagger:dagger:1.2.+'
    compile 'com.jakewharton:butterknife:5.1.+'
    compile 'com.jakewharton.timber:timber:2.4.+'
    compile 'com.squareup.picasso:picasso:2.3.+'
    compile 'com.android.support:support-v4:21.+'
    compile 'com.android.support:appcompat-v7:21.+'
    compile 'com.android.support:cardview-v7:21.+'
    compile 'com.melnykov:floatingactionbutton:1.0.+'
    compile 'com.andreabaccega:android-form-edittext:1.1.0@aar'
    compile 'org.lucasr.twowayview:core:1.0.0-SNAPSHOT@aar'
    compile 'org.lucasr.twowayview:layouts:1.0.0-SNAPSHOT@aar'
    compile core
    compile data
    androidTestCompile 'org.mockito:mockito-core:1.9.+'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.+'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.+'
    androidTestCompile 'com.squareup.spoon:spoon-client:1.1.+'
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.2+'
    androidTestCompile 'com.squareup.assertj:assertj-android:1.0.0'
    //androidTestCompile 'com.squareup.assertj:assertj-android-support-v4:1.0.0'

}

