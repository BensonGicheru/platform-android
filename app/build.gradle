import org.ajoberstar.grgit.Grgit

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'org.ajoberstar.release-opinion'
//apply plugin: 'spoon'
apply plugin: 'play'

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()

def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

def getFeedbackEmailAddress() {

    return project.hasProperty('feedbackEmail') ? feedbackEmail : ''
}

def getGooglePlaystoreServiceAccountEmail() {
    return project.hasProperty('gPlaystoreServiceAccountEmailAddress') ? gPlaystoreServiceAccountEmailAddress : ''
}

def getGooglePlaystoreServicepk12File() {
    // Set to home directory
    return project.hasProperty('gPlaystorePKFile') ? gPlaystorePKFile : '~/'
}

def buildVersionCode() {
    def versionName = android.defaultConfig.versionName
    def (major, minor, patch) = versionName.find(/^(\d+\.\d+\.\d+)/).toString().tokenize('.')
    def code = major.toInteger() * 1000000 + minor.toInteger() * 10000 + patch.toInteger() + 100
    return code
}

def readWhatsNewFile(filename) {
    File file = new File('app/src//main/play/en-US/' + filename);
    return file.exists() ? file.text + '\n\n' : new File('app/src/main/play/en-US/whatsnew').text;
}

def trackProperty() {
    return project.hasProperty('uploadTrack') ? uploadTrack : 'alpha'
}

android {
    compileSdkVersion 21
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.ushahidi.android"
        minSdkVersion 14
        targetSdkVersion 21

        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""

        buildConfigField "String", "FEEDBACK_EMAIL_ADDRESS", "\"${getFeedbackEmailAddress()}\""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        releaseSign
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseSign
        }
    }

    lintOptions {
        abortOnError = false
        lintConfig file("src/main/lint.xml")
    }

    dexOptions {
        preDexLibraries = Boolean.valueOf(System.getProperty("pre-dex", "true"))
    }

    packagingOptions {
        exclude 'LICENSE'
        exclude 'NOTICE'
        exclude 'asm-license.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }


}

/*spoon {
    // Enable debug output
    debug = true
}*/

play {
    serviceAccountEmail = getGooglePlaystoreServiceAccountEmail()
    pk12File = file(getGooglePlaystoreServicepk12File())
    uploadImages = true
    track = trackProperty()
}

release {
    grgit = Grgit.open(dir: '.')

    def tagMessage = readWhatsNewFile("whatsnew-${trackProperty()}");

    android.defaultConfig.versionName = project.version.toString()

    android.defaultConfig.versionCode = buildVersionCode().toInteger()

    tagStrategy {
        generateMessage = { version -> "Release of $version.version $tagMessage" }
    }
}

task releaseApp(dependsOn: ['clean', 'assemble', 'release', 'publishRelease']) {
    description 'Release a new version of application, increase version and create tag'
    doLast {
        println "${android.defaultConfig.versionName} released"
    }
}

if (project.hasProperty('releaseKeyStore') &&
        project.hasProperty('releaseKeyPassword') &&
        project.hasProperty('releaseKeyStorePassword') &&
        project.hasProperty('releaseKeyAlias')) {
    android.signingConfigs.releaseSign.keyAlias = releaseKeyAlias
    android.signingConfigs.releaseSign.storeFile = file(releaseKeyStore)
    android.signingConfigs.releaseSign.storePassword = releaseKeyStorePassword
    android.signingConfigs.releaseSign.keyPassword = releaseKeyPassword
} else {
    android.signingConfigs.releaseSign.keyAlias ""
    android.signingConfigs.releaseSign.storeFile null
    android.signingConfigs.releaseSign.storePassword ""
    android.signingConfigs.releaseSign.keyPassword ""
}

dependencies {
    def core = project(':core')
    def data = project(':data')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.squareup.dagger:dagger-compiler:1.2.2'
    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'com.jakewharton.timber:timber:2.5.1'
    compile 'com.squareup.picasso:picasso:2.5.0'
    compile 'com.android.support:support-v4:21.+'
    compile 'com.android.support:appcompat-v7:21.+'
    compile 'com.android.support:cardview-v7:21.+'
    compile 'com.squareup:otto:1.3.6'
    compile 'com.melnykov:floatingactionbutton:1.2.0'
    compile 'com.andreabaccega:android-form-edittext:1.1.0@aar'
    compile core
    compile data
    androidTestCompile 'org.mockito:mockito-core:1.9.+'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.+'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.+'
    androidTestCompile 'com.squareup.spoon:spoon-client:1.1.+'
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.2+'
    androidTestCompile ('com.squareup.assertj:assertj-android:1.0.0') {
        exclude module: 'support-annotations'
    }
}

