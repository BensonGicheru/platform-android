apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

def globalConfiguration = rootProject.extensions.getByName("ext")

def libVersion = globalConfiguration.getAt("androidVersionName")

android {
    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")
    defaultConfig {
        applicationId "com.ushahidi.android"
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName = libVersion
        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }
}

retrolambda {
    jvmArgs '-noverify'
}

dependencies {
    def appDependencies = rootProject.ext.appDependencies
    def appTestDependencies = rootProject.ext.appTestDependencies

    apt appDependencies.daggerCompiler
    compile appDependencies.raiburari
    compile(appDependencies.materialdrawer) {
        transitive = true
    }
    compile appDependencies.cupboard
    compile appDependencies.retrofit
    compile appDependencies.okhttp
    compile appDependencies.okhttpUrlConnection
    compile appDependencies.qrCodeReaderView
    compile appDependencies.androidIconify
    provided appDependencies.javaxAnnotation

    testCompile appTestDependencies.junit
    testCompile appTestDependencies.mockito
    testCompile appTestDependencies.robolectric
    testCompile appTestDependencies.truth
    testCompile appTestDependencies.retrofitMock
    testCompile appTestDependencies.okhttpMockWebserver
    testApt appDependencies.daggerCompiler

    androidTestCompile appTestDependencies.mockito
    androidTestCompile appTestDependencies.dexmaker
    androidTestCompile appTestDependencies.dexmakerMockito
    androidTestCompile appTestDependencies.espresso
    androidTestCompile appTestDependencies.testingSupportLib
}